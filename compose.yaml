x-customizable-image: &customizable_image
  # By default the image used only contains the `frappe` and `erpnext` apps.
  # See https://github.com/frappe/frappe_docker/blob/main/docs/custom-apps.md
  # about using custom images.
  image: ${CUSTOM_IMAGE:-frappe/erpnext}:${CUSTOM_TAG:-$ERPNEXT_VERSION}
  pull_policy: ${PULL_POLICY:-always}
  restart: ${RESTART_POLICY:-unless-stopped}

x-depends-on-configurator: &depends_on_configurator
  depends_on:
    configurator:
      condition: service_completed_successfully

x-backend-defaults: &backend_defaults
  <<: [*depends_on_configurator, *customizable_image]
  volumes:
    - sites:/home/frappe/frappe-bench/sites

services:
  configurator:
    <<: *backend_defaults
    platform: linux/amd64
    entrypoint:
      - bash
      - -c
    # add redis_socketio for backward compatibility
    command:
      - >
        ls -1 apps > sites/apps.txt;
        bench set-config -g db_host $$DB_HOST;
        bench set-config -gp db_port $$DB_PORT;
        bench set-config -g redis_cache "redis://$$REDIS_CACHE";
        bench set-config -g redis_queue "redis://$$REDIS_QUEUE";
        bench set-config -g redis_socketio "redis://$$REDIS_QUEUE";
        bench set-config -gp socketio_port $$SOCKETIO_PORT;
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-3306}
      REDIS_CACHE: ${REDIS_CACHE:-redis-cache:6379}
      REDIS_QUEUE: ${REDIS_QUEUE:-redis-queue:6379}
      SOCKETIO_PORT: 9000
    depends_on:
      - db
      - redis-cache
      - redis-queue
    restart: on-failure

  backend:
    <<: *backend_defaults
    platform: linux/amd64

  frontend:
    <<: *customizable_image
    platform: linux/amd64
    command:
      - nginx-entrypoint.sh
    environment:
      BACKEND: backend:8000
      SOCKETIO: websocket:9000
      FRAPPE_SITE_NAME_HEADER: ${FRAPPE_SITE_NAME_HEADER:-$$host}
      UPSTREAM_REAL_IP_ADDRESS: ${UPSTREAM_REAL_IP_ADDRESS:-127.0.0.1}
      UPSTREAM_REAL_IP_HEADER: ${UPSTREAM_REAL_IP_HEADER:-X-Forwarded-For}
      UPSTREAM_REAL_IP_RECURSIVE: ${UPSTREAM_REAL_IP_RECURSIVE:-off}
      PROXY_READ_TIMEOUT: ${PROXY_READ_TIMEOUT:-120}
      CLIENT_MAX_BODY_SIZE: ${CLIENT_MAX_BODY_SIZE:-50m}
    expose:
      - "8080"
    volumes:
      - sites:/home/frappe/frappe-bench/sites
    depends_on:
      - backend
      - websocket

  websocket:
    <<: [*depends_on_configurator, *customizable_image]
    platform: linux/amd64
    command:
      - node
      - /home/frappe/frappe-bench/apps/frappe/socketio.js
    volumes:
      - sites:/home/frappe/frappe-bench/sites

  queue-short:
    <<: *backend_defaults
    platform: linux/amd64
    command: bench worker --queue short,default

  queue-long:
    <<: *backend_defaults
    platform: linux/amd64
    command: bench worker --queue long,default,short

  scheduler:
    <<: *backend_defaults
    platform: linux/amd64
    command: bench schedule

  # Database service - MISSING FROM YOUR ORIGINAL
  db:
    image: mariadb:10.6
    platform: linux/amd64
    restart: ${RESTART_POLICY:-unless-stopped}
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --skip-innodb-read-only-compressed
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME:-erpnext_db}
      MYSQL_USER: ${DB_USER:-erpnext}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      timeout: 5s
      retries: 10
      start_period: 30s

  # Redis Cache service - MISSING FROM YOUR ORIGINAL
  redis-cache:
    image: redis:7-alpine
    platform: linux/amd64
    restart: ${RESTART_POLICY:-unless-stopped}
    volumes:
      - redis-cache-data:/data

  # Redis Queue service - MISSING FROM YOUR ORIGINAL  
  redis-queue:
    image: redis:7-alpine
    platform: linux/amd64
    restart: ${RESTART_POLICY:-unless-stopped}
    volumes:
      - redis-queue-data:/data

  # Site creation service - MISSING FROM YOUR ORIGINAL
  create-site:
    <<: *customizable_image
    platform: linux/amd64
    restart: "no"
    entrypoint:
      - bash
      - -c
    command:
      - >
        wait-for-it db:3306 --timeout=120 --strict -- echo "DB is ready";
        wait-for-it redis-cache:6379 --timeout=120 --strict -- echo "Redis Cache is ready"; 
        wait-for-it redis-queue:6379 --timeout=120 --strict -- echo "Redis Queue is ready";
        export start=$$(date +%s);
        until [[ -n $$(grep -hs ^ sites/common_site_config.json | jq -r '.db_host // empty') ]] && 
              [[ $$(grep -hs ^ sites/common_site_config.json | jq -r '.redis_cache // empty') ]]; do
          echo 'Waiting for common_site_config.json to be created';
          sleep 5;
          if (( $$(date +%s) - start > 120 )); then
            echo 'common_site_config.json not found within 120 seconds';
            exit 1;
          fi;
        done;
        echo 'common_site_config.json found';
        if [[ ! -d "sites/${SITE_NAME:-localhost}" ]]; then
          echo "Creating new site: ${SITE_NAME:-localhost}";
          bench new-site ${SITE_NAME:-localhost} --no-mariadb-socket --mariadb-root-password=${DB_PASSWORD} --install-app=erpnext --admin-password=${ADMIN_PASSWORD};
        else
          echo "Site ${SITE_NAME:-localhost} already exists";
        fi
    environment:
      SITE_NAME: ${SITE_NAME:-localhost}
      DB_PASSWORD: ${DB_PASSWORD}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    depends_on:
      configurator:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    volumes:
      - sites:/home/frappe/frappe-bench/sites

# ERPNext requires local assets access (Frappe does not)
volumes:
  sites:
  db-data:
  redis-cache-data:
  redis-queue-data:
